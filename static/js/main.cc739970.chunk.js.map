{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","components/TodoApp/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","id","title","completed","todos","setTodos","changeCompleted","changeTitle","useState","edit","setEdit","newTitle","setNewTitle","key","className","classNames","editing","type","checked","onChange","onDoubleClick","onClick","filter","todo","defaultValue","event","target","value","trimLeft","onKeyDown","onBlur","TodoList","map","TodosFilter","setFilter","href","selected","innerText","TodoApp","todosFiltered","query","setQuery","useEffect","localStorage","setItem","JSON","stringify","markAllCompleted","every","onSubmit","preventDefault","placeholder","onKeyUp","Date","length","htmlFor","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc739970.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({\n  id, title, completed, todos, setTodos, changeCompleted, changeTitle,\n}) => {\n  const [edit, setEdit] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n\n  const handleChange = (event) => {\n    setNewTitle(event.target.value.trimLeft());\n  };\n\n  const handleEdit = (event) => {\n    if (event.key === 'Enter' && newTitle) {\n      changeTitle(id, newTitle);\n      setEdit(false);\n    }\n\n    if (event.key === 'Escape') {\n      setEdit(false);\n    }\n  };\n\n  const handleSaveChanges = () => {\n    if (newTitle) {\n      changeTitle(id, newTitle);\n      setEdit(false);\n    } else {\n      setEdit(false);\n    }\n  };\n\n  return (\n    <li\n      key={id}\n      className={classNames({\n        completed,\n        editing: edit,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => changeCompleted(id)}\n        />\n        <label\n          onDoubleClick={() => setEdit(true)}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => setTodos(\n            todos.filter(todo => todo.id !== id),\n          )}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        defaultValue={title}\n        onChange={handleChange}\n        onKeyDown={handleEdit}\n        onBlur={handleSaveChanges}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos, setTodos, changeCompleted, changeTitle }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        {...todo}\n        todos={todos}\n        setTodos={setTodos}\n        changeTitle={changeTitle}\n        changeCompleted={changeCompleted}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodosFilter = ({ filter, setFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={classNames({\n          selected: filter === 'All',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={classNames({\n          selected: filter === 'Active',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={classNames({\n          selected: filter === 'Completed',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from '../TodoList';\nimport { TodosFilter } from '../TodosFilter';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  let todosFiltered;\n\n  switch (filter) {\n    case 'All':\n      todosFiltered = todos;\n      break;\n\n    case 'Active':\n      todosFiltered = todos.filter(todo => !todo.completed);\n      break;\n\n    case 'Completed':\n      todosFiltered = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      todosFiltered = todos;\n  }\n\n  const changeCompleted = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n    }));\n  };\n\n  const changeTitle = (id, newTitle) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        title: newTitle,\n      };\n    }));\n  };\n\n  const markAllCompleted = () => {\n    if (todos.every(todo => todo.completed)) {\n      setTodos(todos.map(todo => ({ ...todo, completed: !todo.completed })));\n    } else {\n      setTodos(todos.map((todo) => {\n        if (!todo.completed) {\n          return { ...todo, completed: true };\n        }\n\n        return todo;\n      }));\n    }\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value.trimLeft());\n  };\n\n  const handleAdd = () => {\n    if (query) {\n      setTodos([{\n        id: +new Date(),\n        title: query,\n        completed: false,\n      }, ...todos]);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={(event) => {\n          event.preventDefault();\n        }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={query}\n            onChange={handleChange}\n            onKeyUp={(event) => {\n              if (event.key === 'Enter') {\n                handleAdd();\n              }\n            }}\n          />\n        </form>\n      </header>\n\n      {(todos.length > 0) && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              onChange={markAllCompleted}\n              checked={todos.every(todo => todo.completed)}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              todos={todosFiltered}\n              setTodos={setTodos}\n              changeTitle={changeTitle}\n              changeCompleted={changeCompleted}\n              markAllCompleted={markAllCompleted}\n            />\n\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${todos.filter(todo => !todo.completed).length} items left`}\n            </span>\n\n            <TodosFilter\n              todos={todos}\n              filter={filter}\n              setFilter={setFilter}\n            />\n\n            {(todos.some(todo => todo.completed)) && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={() => setTodos(\n                  todos.filter(todo => !todo.completed),\n                )}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}