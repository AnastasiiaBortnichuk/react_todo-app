{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","components/TodoApp/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","todos","setTodos","changeCompleted","map","id","completed","title","key","className","classNames","type","checked","onChange","onClick","filter","todo","TodoList","TodosFilter","setFilter","href","selected","event","target","innerText","TodoApp","todosFiltered","useState","query","setQuery","markAllCompleted","every","onSubmit","preventDefault","placeholder","value","trimLeft","onKeyUp","Date","length","htmlFor","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7dc54ee.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({ todos, setTodos, changeCompleted }) => (\n  <>\n    {todos.map(({ id, completed, title }) => (\n      <li\n        key={id}\n        className={classNames({\n          completed,\n        })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={() => changeCompleted(id)}\n          />\n          <label>{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => setTodos(\n              todos.filter(todo => todo.id !== id),\n            )}\n          />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))}\n  </>\n);\n\nTodoItem.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos, setTodos, changeCompleted }) => (\n  <ul className=\"todo-list\">\n    <TodoItem\n      todos={todos}\n      setTodos={setTodos}\n      changeCompleted={changeCompleted}\n    />\n\n    {/* <li className=\"editing\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>zxcvbnm</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li> */}\n\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodosFilter = ({ todos, filter, setFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={classNames({\n          selected: filter === 'All',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={classNames({\n          selected: filter === 'Active',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={classNames({\n          selected: filter === 'Completed',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from '../TodoList';\nimport { TodosFilter } from '../TodosFilter';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  let todosFiltered;\n\n  switch (filter) {\n    case 'All':\n      todosFiltered = todos;\n      break;\n\n    case 'Active':\n      todosFiltered = todos.filter(todo => !todo.completed);\n      break;\n\n    case 'Completed':\n      todosFiltered = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      todosFiltered = todos;\n  }\n\n  const changeCompleted = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const markAllCompleted = () => {\n    if (todos.every(todo => todo.completed)) {\n      setTodos(todos.map(todo => ({ ...todo, completed: !todo.completed })));\n    } else {\n      setTodos(todos.map((todo) => {\n        if (!todo.completed) {\n          return { ...todo, completed: true };\n        }\n\n        return todo;\n      }));\n    }\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value.trimLeft());\n  };\n\n  const handleAdd = () => {\n    if (query) {\n      setTodos([{\n        id: +new Date(),\n        title: query,\n        completed: false,\n      }, ...todos]);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={(event) => {\n          event.preventDefault();\n        }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={query}\n            onChange={handleChange}\n            onKeyUp={(event) => {\n              if (event.key === 'Enter') {\n                handleAdd();\n              }\n            }}\n          />\n        </form>\n      </header>\n\n      {(todos.length > 0) && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              onChange={markAllCompleted}\n              checked={todos.every(todo => todo.completed)}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              todos={todosFiltered}\n              setTodos={setTodos}\n              changeCompleted={changeCompleted}\n              markAllCompleted={markAllCompleted}\n            />\n\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${todos.filter(todo => !todo.completed).length} items left`}\n            </span>\n\n            <TodosFilter\n              todos={todos}\n              filter={filter}\n              setFilter={setFilter}\n            />\n\n            {(todos.some(todo => todo.completed)) && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={() => setTodos(\n                  todos.filter(todo => !todo.completed),\n                )}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}