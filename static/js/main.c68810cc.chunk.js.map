{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","components/TodoApp/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","id","title","completed","todos","setTodos","changeCompleted","changeTitle","useState","editing","setEditing","newTitle","setNewTitle","className","classNames","type","checked","onChange","onDoubleClick","onClick","filter","todo","autoFocus","defaultValue","event","target","value","trimLeft","onKeyDown","key","onBlur","TodoList","map","TodosFilter","setFilter","href","selected","innerText","TodoApp","todosFiltered","query","setQuery","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","markAllCompleted","every","onSubmit","preventDefault","placeholder","onKeyUp","Date","length","htmlFor","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c68810cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({\n  id, title, completed, todos, setTodos, changeCompleted, changeTitle,\n}) => {\n  const [editing, setEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n\n  const handleChange = (event) => {\n    setNewTitle(event.target.value.trimLeft());\n  };\n\n  const handleEdit = (event) => {\n    if (event.key === 'Enter' && newTitle) {\n      changeTitle(id, newTitle);\n      setEditing(false);\n      setNewTitle('');\n    }\n\n    if (event.key === 'Escape') {\n      setNewTitle('');\n      setEditing(false);\n    }\n  };\n\n  const handleSaveChanges = () => {\n    if (newTitle) {\n      changeTitle(id, newTitle);\n      setEditing(false);\n      setNewTitle('');\n    } else {\n      setEditing(false);\n      setNewTitle('');\n    }\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed,\n        editing,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => changeCompleted(id)}\n        />\n        <label\n          onDoubleClick={() => setEditing(true)}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => setTodos(\n            todos.filter(todo => todo.id !== id),\n          )}\n        />\n      </div>\n      {(editing === true) && (\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"edit\"\n          defaultValue={title}\n          onChange={handleChange}\n          onKeyDown={handleEdit}\n          onBlur={handleSaveChanges}\n        />\n      )}\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos, setTodos, changeCompleted, changeTitle }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        {...todo}\n        todos={todos}\n        setTodos={setTodos}\n        changeTitle={changeTitle}\n        changeCompleted={changeCompleted}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodosFilter = ({ filter, setFilter }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={classNames({\n          selected: filter === 'All',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={classNames({\n          selected: filter === 'Active',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={classNames({\n          selected: filter === 'Completed',\n        })}\n        onClick={event => setFilter(event.target.innerText)}\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from '../TodoList';\nimport { TodosFilter } from '../TodosFilter';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('todos'))) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  let todosFiltered;\n\n  switch (filter) {\n    case 'All':\n      todosFiltered = todos;\n      break;\n\n    case 'Active':\n      todosFiltered = todos.filter(todo => !todo.completed);\n      break;\n\n    case 'Completed':\n      todosFiltered = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      todosFiltered = todos;\n  }\n\n  const changeCompleted = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        completed: !todo.completed,\n      };\n    }));\n  };\n\n  const changeTitle = (id, newTitle) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        title: newTitle,\n      };\n    }));\n  };\n\n  const markAllCompleted = () => {\n    if (todos.every(todo => todo.completed)) {\n      setTodos(todos.map(todo => ({ ...todo, completed: !todo.completed })));\n    } else {\n      setTodos(todos.map((todo) => {\n        if (!todo.completed) {\n          return { ...todo, completed: true };\n        }\n\n        return todo;\n      }));\n    }\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value.trimLeft());\n  };\n\n  const handleAdd = () => {\n    if (query) {\n      setTodos([{\n        id: +new Date(),\n        title: query,\n        completed: false,\n      }, ...todos]);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={(event) => {\n          event.preventDefault();\n        }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={query}\n            onChange={handleChange}\n            onKeyUp={(event) => {\n              if (event.key === 'Enter') {\n                handleAdd();\n              }\n            }}\n          />\n        </form>\n      </header>\n\n      {(todos.length > 0) && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              onChange={markAllCompleted}\n              checked={todos.every(todo => todo.completed)}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              todos={todosFiltered}\n              setTodos={setTodos}\n              changeTitle={changeTitle}\n              changeCompleted={changeCompleted}\n              markAllCompleted={markAllCompleted}\n            />\n\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${todos.filter(todo => !todo.completed).length} items left`}\n            </span>\n\n            <TodosFilter\n              todos={todos}\n              filter={filter}\n              setFilter={setFilter}\n            />\n\n            {(todos.some(todo => todo.completed)) && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={() => setTodos(\n                  todos.filter(todo => !todo.completed),\n                )}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}