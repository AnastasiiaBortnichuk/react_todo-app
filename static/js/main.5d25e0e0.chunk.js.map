{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","components/TodoApp/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","todos","changeCompleted","map","id","completed","title","key","className","classNames","type","checked","onChange","TodoList","markAllCompleted","every","todo","htmlFor","TodosFilter","filter","length","href","TodoApp","useState","setTodos","query","setQuery","onSubmit","event","preventDefault","placeholder","value","target","trimLeft","onKeyUp","Date","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d25e0e0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({ todos, changeCompleted }) => (\n  <>\n    {todos.map(({ id, completed, title }) => (\n      <li\n        key={id}\n        className={classNames({\n          completed,\n        })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={() => changeCompleted(id)}\n          />\n          <label>{title}</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))}\n\n  </>\n);\n\nTodoItem.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ todos, changeCompleted, markAllCompleted }) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={markAllCompleted}\n      checked={todos.every(todo => todo.completed)}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      <TodoItem\n        todos={todos}\n        changeCompleted={changeCompleted}\n      />\n\n      <li>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>asdfghj</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"editing\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>zxcvbnm</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  markAllCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodosFilter = ({ todos }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${todos.filter(todo => !todo.completed).length} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" className=\"selected\">All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\">Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\">Completed</a>\n      </li>\n    </ul>\n\n    <button type=\"button\" className=\"clear-completed\">\n      Clear completed\n    </button>\n  </footer>\n);\n\nTodosFilter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from '../TodoList';\nimport { TodosFilter } from '../TodosFilter';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const changeCompleted = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const markAllCompleted = () => {\n    if (todos.every(todo => todo.completed)) {\n      setTodos(todos.map(todo => ({ ...todo, completed: !todo.completed })));\n    } else {\n      setTodos(todos.map((todo) => {\n        if (!todo.completed) {\n          return { ...todo, completed: true };\n        }\n\n        return todo;\n      }));\n    }\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value.trimLeft());\n  };\n\n  const handleAdd = () => {\n    if (query) {\n      setTodos([{\n        id: +new Date(),\n        title: query,\n        completed: false,\n      }, ...todos]);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={(event) => {\n          event.preventDefault();\n        }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={query}\n            onChange={handleChange}\n            onKeyUp={(event) => {\n              if (event.key === 'Enter') {\n                handleAdd();\n              }\n            }}\n          />\n        </form>\n      </header>\n\n      <TodoList\n        todos={todos}\n        changeCompleted={changeCompleted}\n        markAllCompleted={markAllCompleted}\n      />\n      <TodosFilter todos={todos} />\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}